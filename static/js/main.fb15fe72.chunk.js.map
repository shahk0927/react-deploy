{"version":3,"sources":["logo.svg","components/Home.js","components/AddDepModal.js","components/EditDepModal.js","components/Department.js","components/AddEmpModal.js","components/EditEmpModal.js","components/Employee.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","classname","Component","AddDepModal","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","DepartmentID","DepartmentName","target","value","then","res","json","result","error","className","anchorOrigin","vertical","horizontal","open","this","autoHideDuration","onClose","message","id","action","IconButton","key","arial-label","color","onClick","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","name","required","placeholder","Button","variant","Footer","onHide","EditDepModal","disabled","defaultValue","depid","depname","Department","deps","addModalShow","editModalShow","refreshList","response","data","window","confirm","header","editModalClose","Table","striped","bordered","hover","map","dep","ButtonToolbar","deleteDep","show","AddEmpModal","EmployeeID","EmployeeName","MailID","DOJ","as","EditEmpModal","EmployeetID","empid","empname","depmt","mailid","doj","Employee","emps","emp","deleteEmp","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","to","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fb15fe72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\n\r\nexport class Home extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div classname=\"mt-5 d-flex justify-content-left\">\r\n\r\n                <h3>Welcome This is home page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport {render} from '@testing-library/react';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddDepModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {snackbaropen:false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    snackbarClose = (event) => {\r\n\r\n      this.setState({snackbaropen:false});\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n      event.preventDefault();\r\n\r\n      fetch('http://localhost:65326/api/department'\r\n      ,{method:'POST',\r\n      headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json'\r\n      },\r\n\r\n      body:JSON.stringify({\r\n\r\n        DepartmentID:null,\r\n        DepartmentName: event.target.DepartmentName.value\r\n      })\r\n    })\r\n    .then(res=> res.json())\r\n    .then((result)=>\r\n    {\r\n\r\n     // alert(result);\r\n     this.setState({snackbaropen:true, snackbarmsg:result});\r\n    },\r\n    (error)=>{\r\n      // alert('Failed');\r\n      this.setState({snackbaropen:true, snackbarmsg:'failed'});\r\n    }\r\n    )\r\n    }\r\n\r\nrender(){\r\n\r\n    return(\r\n\r\n      <div className=\"container\">\r\n\r\n    <SnackBar\r\n      anchorOrigin={{vertical:'center',horizontal:'center'}}\r\n      open = {this.state.snackbaropen}\r\n      autoHideDuration = {3000}\r\n      onClose={this.snackbarClose}\r\n\r\n      message={<span id=\"message-id\">{this.state.snackbarmsg}\r\n              \r\n              </span>}\r\n\r\n      action={[<IconButton\r\n      key=\"close\"\r\n      arial-label=\"Close\"\r\n      color=\"inherit\"\r\n      onClick={this.snackbarClose}\r\n      >\r\n        x\r\n      </IconButton>]}        \r\n\r\n\r\n    />\r\n\r\n        <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add Department\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n       \r\n         <Row>\r\n\r\n           <Col sm={6}>\r\n             <Form onSubmit={this.handleSubmit}>\r\n               <Form.Group controlId=\"DepartmentName\">\r\n              <Form.Label>DepartmentName</Form.Label>\r\n              <Form.Control\r\n              \r\n              type=\"text\"\r\n              name=\"DepartmentName\"\r\n              required\r\n              placeholder=\"DepartmentName\"\r\n              />\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Add Department\r\n                </Button>\r\n\r\n               </Form.Group>\r\n             </Form>\r\n\r\n\r\n           </Col>\r\n         </Row>\r\n       \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    </div>\r\n    );\r\n}\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport {render} from '@testing-library/react';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditDepModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {snackbaropen:false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n\r\n        this.setState({snackbaropen:false});\r\n      }\r\n\r\n    handleSubmit(event){\r\n\r\n        event.preventDefault();\r\n  \r\n        fetch('http://localhost:65326/api/department'\r\n        ,{method:'PUT',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n  \r\n        body:JSON.stringify({\r\n  \r\n          DepartmentID:event.target.DepartmentID.value,\r\n          DepartmentName: event.target.DepartmentName.value\r\n        })\r\n      })\r\n      .then(res=> res.json())\r\n      .then((result)=>\r\n      {\r\n  \r\n       // alert(result);\r\n       this.setState({snackbaropen:true, snackbarmsg:result});\r\n      },\r\n      (error)=>{\r\n        // alert('Failed');\r\n        this.setState({snackbaropen:true, snackbarmsg:'failed'});\r\n      }\r\n      )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n    \r\n          <div className=\"container\">\r\n    \r\n        <SnackBar\r\n          anchorOrigin={{vertical:'center',horizontal:'center'}}\r\n          open = {this.state.snackbaropen}\r\n          autoHideDuration = {3000}\r\n          onClose={this.snackbarClose}\r\n    \r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}\r\n                  \r\n                  </span>}\r\n    \r\n          action={[<IconButton\r\n          key=\"close\"\r\n          arial-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={this.snackbarClose}\r\n          >\r\n            x\r\n          </IconButton>]}        \r\n    \r\n    \r\n        />\r\n    \r\n            <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Department\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n           \r\n             <Row>\r\n    \r\n               <Col sm={6}>\r\n                 <Form onSubmit={this.handleSubmit}>\r\n\r\n                 <Form.Group controlId=\"DepartmentID\">\r\n                  <Form.Label>DepartmentID</Form.Label>\r\n                  <Form.Control\r\n                  \r\n                  type=\"text\"\r\n                  name=\"DepartmentID\"\r\n                  required\r\n                  disabled\r\n                  defaultValue={this.props.depid}\r\n                  placeholder=\"DepartmentID\"\r\n                  />\r\n                   </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"DepartmentName\">\r\n                  <Form.Label>DepartmentName</Form.Label>\r\n                  <Form.Control\r\n                  \r\n                  type=\"text\"\r\n                  name=\"DepartmentName\"\r\n                  required\r\n                  defaultValue={this.props.depname}\r\n                  placeholder=\"DepartmentName\"\r\n                  />\r\n                   </Form.Group>\r\n    \r\n                   <Form.Group>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Update Department\r\n                    </Button>\r\n    \r\n                   </Form.Group>\r\n                 </Form>\r\n    \r\n    \r\n               </Col>\r\n             </Row>\r\n           \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    \r\n        </div>\r\n        );\r\n    }\r\n\r\n} ","import React, {Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddDepModal} from './AddDepModal';\r\nimport {EditDepModal} from './EditDepModal';\r\n\r\nexport class Department extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {deps:[], addModalShow : false,  editModalShow : false}\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n\r\n       fetch('http://localhost:65326/api/department')\r\n       .then(response=> response.json())\r\n       .then(data=> {\r\n        this.setState({deps:data});\r\n       }\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    deleteDep(depid){\r\n\r\n        if(window.confirm('Are you sure?')){\r\n\r\n            fetch('http://localhost:65326/api/department/'+depid,{\r\n\r\n            method:'DELETE',\r\n            header:{'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n        \r\n        }\r\n       })\r\n        }\r\n        else{\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const{deps, depid, depname}=this.state;\r\n        let addModalClose =() => this.setState({addModalShow:false});\r\n        let editModalClose =() => this.setState({editModalShow:false});\r\n        return(\r\n\r\n            <div>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>DepartmentID</th>\r\n                        <th>DepartmentName</th>\r\n                        <th>Option</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {deps.map(dep=>\r\n                        <tr key={dep.DepartmentID}>\r\n                        \r\n                            <td>{dep.DepartmentID}</td>\r\n                            <td>{dep.DepartmentName}</td>\r\n                            <td>\r\n                                <ButtonToolbar>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"info\" \r\n                                    onClick={()=>this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName})}\r\n                                    >\r\n                                        Edit\r\n                                    </Button>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"danger\" \r\n                                    onClick={()=> this.deleteDep(dep.DepartmentID)}\r\n                                    >Delete</Button>\r\n\r\n\r\n\r\n                                    <EditDepModal\r\n                                    \r\n                                    show = {this.state.editModalShow}\r\n                                    onHide={editModalClose}\r\n                                    depid = {depid}\r\n                                    depname={depname}\r\n\r\n                                    />\r\n                                </ButtonToolbar>\r\n                            </td>\r\n\r\n                        </tr>\r\n                        )}\r\n\r\n                </tbody>\r\n\r\n            </Table>\r\n\r\n            <ButtonToolbar>\r\n\r\n                <Button\r\n                variant='primary'\r\n                onClick={()=> this.setState({addModalShow:true})}\r\n                >Add Department</Button>\r\n\r\n                <AddDepModal\r\n                show={this.state.addModalShow}\r\n                onHide={addModalClose}\r\n                />\r\n            </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport {render} from '@testing-library/react';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddEmpModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {deps:[], snackbaropen:false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch('http://localhost:65326/api/department')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n\r\n            this.setState({deps:data});\r\n        });\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n\r\n      this.setState({snackbaropen:false});\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n      event.preventDefault();\r\n\r\n      fetch('http://localhost:65326/api/employee'\r\n      ,{method:'POST',\r\n      headers:{\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json'\r\n      },\r\n\r\n      body:JSON.stringify({\r\n\r\n        EmployeeID:null,\r\n        EmployeeName: event.target.EmployeeName.value,\r\n        Department:event.target.Department.value,\r\n        MailID:event.target.MailID.value,\r\n        DOJ:event.target.DOJ.value\r\n      })\r\n    })\r\n    .then(res=> res.json())\r\n    .then((result)=>\r\n    {\r\n\r\n     // alert(result);\r\n     this.setState({snackbaropen:true, snackbarmsg:result});\r\n    },\r\n    (error)=>{\r\n      // alert('Failed');\r\n      this.setState({snackbaropen:true, snackbarmsg:'failed'});\r\n    }\r\n    )\r\n    }\r\n\r\nrender(){\r\n\r\n    return(\r\n\r\n      <div className=\"container\">\r\n\r\n    <SnackBar\r\n      anchorOrigin={{vertical:'center',horizontal:'center'}}\r\n      open = {this.state.snackbaropen}\r\n      autoHideDuration = {3000}\r\n      onClose={this.snackbarClose}\r\n\r\n      message={<span id=\"message-id\">{this.state.snackbarmsg}\r\n              \r\n              </span>}\r\n\r\n      action={[<IconButton\r\n      key=\"close\"\r\n      arial-label=\"Close\"\r\n      color=\"inherit\"\r\n      onClick={this.snackbarClose}\r\n      >\r\n        x\r\n      </IconButton>]}        \r\n\r\n\r\n    />\r\n\r\n        <Modal\r\n      {...this.props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Add Employee\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n       \r\n         <Row>\r\n\r\n           <Col sm={6}>\r\n             <Form onSubmit={this.handleSubmit}>\r\n\r\n               <Form.Group controlId=\"EmployeeName\">\r\n                    <Form.Label>EmployeeName</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    name=\"EmployeeName\"\r\n                    required\r\n                    placeholder=\"EmployeeName\"\r\n                    />\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"Department\">\r\n                    <Form.Label>Department</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                        {this.state.deps.map(dep=>\r\n                            <option key={dep.DepartmentID}>{dep.DepartmentName}</option>\r\n                            )}\r\n                        \r\n                    </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"MailID\">\r\n                    <Form.Label>MailID</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    name=\"MailID\"\r\n                    required\r\n                    placeholder=\"MailID\"\r\n                    />\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"DOJ\">\r\n                    <Form.Label>DOJ</Form.Label>\r\n                    <Form.Control\r\n                    type=\"date\"\r\n                    name=\"DOJ\"\r\n                    required\r\n                    placeholder=\"DOJ\"\r\n                    />\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Add Employee\r\n                </Button>\r\n               </Form.Group>\r\n             </Form>\r\n           </Col>\r\n         </Row>\r\n       \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n\r\n    </div>\r\n    );\r\n}\r\n}","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form} from 'react-bootstrap';\r\nimport {render} from '@testing-library/react';\r\nimport SnackBar from '@material-ui/core/SnackBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class EditEmpModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n\r\n        this.state = {deps:[],snackbaropen:false, snackbarmsg:''};\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        fetch('http://localhost:65326/api/department')\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n\r\n            this.setState({deps:data});\r\n        });\r\n    }\r\n\r\n    snackbarClose = (event) => {\r\n\r\n        this.setState({snackbaropen:false});\r\n      }\r\n\r\n    handleSubmit(event){\r\n\r\n        event.preventDefault();\r\n  \r\n        fetch('http://localhost:65326/api/employee'\r\n        ,{method:'PUT',\r\n        headers:{\r\n          'Accept':'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n  \r\n        body:JSON.stringify({\r\n  \r\n        EmployeetID:event.target.EmployeeID.value,\r\n        EmployeeName: event.target.EmployeeName.value,\r\n        Department:event.target.Department.value,\r\n        MailID:event.target.MailID.value,\r\n        DOJ:event.target.DOJ.value\r\n        })\r\n      })\r\n      .then(res=> res.json())\r\n      .then((result)=>\r\n      {\r\n  \r\n       // alert(result);\r\n       this.setState({snackbaropen:true, snackbarmsg:result});\r\n      },\r\n      (error)=>{\r\n        // alert('Failed');\r\n        this.setState({snackbaropen:true, snackbarmsg:'failed'});\r\n      }\r\n      )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n    \r\n          <div className=\"container\">\r\n    \r\n        <SnackBar\r\n          anchorOrigin={{vertical:'center',horizontal:'center'}}\r\n          open = {this.state.snackbaropen}\r\n          autoHideDuration = {3000}\r\n          onClose={this.snackbarClose}\r\n    \r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}\r\n                  \r\n                  </span>}\r\n    \r\n          action={[<IconButton\r\n          key=\"close\"\r\n          arial-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={this.snackbarClose}\r\n          >\r\n            x\r\n          </IconButton>]}        \r\n    \r\n    \r\n        />\r\n    \r\n            <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Employee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n           \r\n             <Row>\r\n    \r\n               <Col sm={6}>\r\n                 <Form onSubmit={this.handleSubmit}>\r\n\r\n                 <Form.Group controlId=\"EmployeeID\">\r\n                    <Form.Label>EmployeeID</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    name=\"EmployeeID\"\r\n                    disabled\r\n                    defaultValue={this.props.empid}\r\n                    placeholder=\"EmployeeID\"\r\n                    />\r\n               </Form.Group>\r\n\r\n                 <Form.Group controlId=\"EmployeeName\">\r\n                    <Form.Label>EmployeeName</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    name=\"EmployeeName\"\r\n                    required\r\n                    defaultValue={this.props.empname}\r\n                    placeholder=\"EmployeeName\"\r\n                    />\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"Department\">\r\n                    <Form.Label>Department</Form.Label>\r\n                    <Form.Control as=\"select\">\r\n                        {this.state.deps.map(dep=>\r\n                            <option key={dep.DepartmentID}>{dep.DepartmentName}</option>\r\n                            )}\r\n                        defaultValue={this.props.depmt}\r\n                    </Form.Control>\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"MailID\">\r\n                    <Form.Label>MailID</Form.Label>\r\n                    <Form.Control\r\n                    type=\"text\"\r\n                    name=\"MailID\"\r\n                    required\r\n                    defaultValue={this.props.mailid}\r\n                    placeholder=\"MailID\"\r\n                    />\r\n               </Form.Group>\r\n\r\n               <Form.Group controlId=\"DOJ\">\r\n                    <Form.Label>DOJ</Form.Label>\r\n                    <Form.Control\r\n                    type=\"date\"\r\n                    name=\"DOJ\"\r\n                    required\r\n                    defaultValue={this.props.doj}\r\n                    placeholder=\"DOJ\"\r\n                    />\r\n               </Form.Group>\r\n\r\n    \r\n                   <Form.Group>\r\n    \r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      Update Employee\r\n                    </Button>\r\n    \r\n                   </Form.Group>\r\n                 </Form>\r\n               </Col>\r\n             </Row>\r\n           \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    \r\n        </div>\r\n        );\r\n    }\r\n\r\n} ","import React, {Component} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddEmpModal} from './AddEmpModal';\r\nimport {EditEmpModal} from './EditEmpModal';\r\n\r\n\r\nexport class Employee extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {emps:[], addModalShow : false,  editModalShow : false}\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n\r\n       fetch('http://localhost:65326/api/employee')\r\n       .then(response=> response.json())\r\n       .then(data=> {\r\n        this.setState({emps:data});\r\n       }\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    deleteEmp(empid){\r\n\r\n        if(window.confirm('Are you sure?')){\r\n\r\n            fetch('http://localhost:65326/api/employee/'+empid,{\r\n\r\n            method:'DELETE',\r\n            header:{'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n        \r\n        }\r\n       })\r\n        }\r\n        else{\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const{emps, empid, empname, depmt, mailid, doj}=this.state;\r\n        let addModalClose =() => this.setState({addModalShow:false});\r\n        let editModalClose =() => this.setState({editModalShow:false});\r\n        return(\r\n\r\n            <div>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>EmployeeID</th>\r\n                        <th>EmployeeName</th>\r\n                        <th>Department</th>\r\n                        <th>MailID</th>\r\n                        <th>DOJ</th>\r\n                        <th>Options</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {emps.map(emp=>\r\n                        <tr key={emp.EmployeeID}>\r\n                        \r\n                            <td>{emp.EmployeeID}</td>\r\n                            <td>{emp.EmployeeName}</td>\r\n                            <td>{emp.Department}</td>\r\n                            <td>{emp.MailID}</td>\r\n                            <td>{emp.DOJ}</td>\r\n                            <td>\r\n                                <ButtonToolbar>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"info\" \r\n                                    onClick={()=>this.setState({editModalShow:true, empid:emp.EmployeeID, empname:emp.EmployeeName,\r\n                                    depmt:emp.Department, mailid:emp.MailID,doj:emp.DOJ})}\r\n                                    >\r\n                                        Edit\r\n                                    </Button>\r\n\r\n                                    <Button className=\"mr-2\" variant=\"danger\" \r\n                                    onClick={()=> this.deleteEmp(emp.EmployeeID)}\r\n                                    >Delete</Button>\r\n\r\n\r\n\r\n                                    <EditEmpModal\r\n                                    \r\n                                    show = {this.state.editModalShow}\r\n                                    onHide={editModalClose}\r\n                                    empid = {empid}\r\n                                    empname={empname}\r\n                                    depmt={depmt}\r\n                                    mailid={mailid}\r\n                                    doj={doj}\r\n                                    />\r\n                                </ButtonToolbar>\r\n                            </td>\r\n\r\n                        </tr>\r\n                        )}\r\n\r\n                </tbody>\r\n\r\n            </Table>\r\n\r\n            <ButtonToolbar>\r\n\r\n                <Button\r\n                variant='primary'\r\n                onClick={()=> this.setState({addModalShow:true})}\r\n                >Add Employee</Button>\r\n\r\n                <AddEmpModal\r\n                show={this.state.addModalShow}\r\n                onHide={addModalClose}\r\n                />\r\n            </ButtonToolbar>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nexport class Navigation extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Navbar bg=\"dark\" expand=\"1g\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav>\r\n                <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\">Home</NavLink>\r\n                    <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/department\">Department</NavLink>\r\n                    <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/employee\">Employee</NavLink>\r\n\r\n                </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            \r\n            )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport {Home} from './components/Home'\nimport {Department} from './components/Department'\nimport {Employee} from './components/Employee'\nimport {Navigation} from './components/Navigation'\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nfunction App() {\n  return (\n\n    <BrowserRouter>\n    <div className=\"container\">\n\n      <h3 className=\"m-3 d-flex justify-content-center\">Js With Api</h3>\n      <h5 className=\"m-3 d-flex justify-content-center\">Portal</h5>\n\n      <Navigation/>\n\n\n      <Switch>\n      <Route path='/' component={Home} exact/>\n      <Route path='/department' component={Department} exact/>\n      <Route path='/employee' component={Employee} exact/>\n\n      </Switch>\n    </div>\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}